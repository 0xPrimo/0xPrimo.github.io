[{"content":"Overview PikaBot is a malware loader, widely distributed since February 2023, that is used by Initial Access Brokers (IABs) to establish an initial foothold within a victim’s networks and to distribute additional payloads such as Cobalt Strike and Meterpreter. Since its emergence in early 2023, PikaBot appears to be in active development, with a new major version released in February 2024. The malware employs advanced anti-analysis techniques to evade detection and harden analysis, including system checks, indirect syscalls, encryption of next-stage and strings, and dynamic API resolving.\nInfection chain The infection chain starts with the victim receiving an ISO image attached to an email. The ISO image contains a legitimate Windows Write file (write.exe) and a DLL (edputil.dll). After the victim clicks on write.exe, the side-loaded DLL downloads the packed Pikabot DLL. Once unpacked, the Pikabot loader will decrypt and inject the core module into the created process \u0026ldquo;ctfmon.exe\u0026rdquo;.\nAnalysis The side-loaded DLL download and run Pikabot DLL.\nUnpacking The downloaded DLL will decrypt and reflectively load the Pikabot Loader from the resource section into the current process memory.\nLoader Indirect Syscalls Pikabot used Indirect syscalls to stay under the radar and evade EDR user-land hooking, as well as debugging attempts.\nAnti-debugging The Pikabot Loader runs multiple checks to detect if it’s beign debugged.\nIt also checks a list of processes. If any of these processes are running, the Pikabot Loader will exit without loading the core module.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 ProcessHacker.exe tcpview.exe autorunsc.exe filemon.exe procmon.exe regmon.exe procexp.exe idaq.exe idaq64.exe x32dbg.exe x64dbg.exe Fiddler.exe httpdebugger.exe cheatengine-i386.exe cheatengine-x86_64.exe cheatengine-x86_64-SSE4-AVX2.exe LordPE.exe SysInspector.exe sniff_hit.exe windbg.exe joeboxcontrol.exe joeboxserver.exe ResourceHacker.exe dumpcap.exe Dynamic API Resolving The Loader will resolve APIs from ntdll and kernel32 by hash, and store them into a global structure\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 struct ctx { DWORD is_being_debugged; DWORD LdrLoadDll; DWORD LdrGetProcedureAddress; DWORD RtlAllocateHeap; DWORD RtlFreeHeap; DWORD RtlDecompressBuffer; DWORD RtlCreateProcessParametersEx; DWORD RtlDestroyProcessParameters; DWORD ExitProcess; DWORD CheckRemoteDebuggerPresent; DWORD VirtualAlloc; DWORD GetThreadContext; DWORD VirtualFree; DWORD CreateToolhelp32Snapshot; DWORD Process32FirstW; DWORD Process32NextW; DWORD ntdll; DWORD kernel32; DWORD dw1; DWORD core_module_payload; DWORD core_module_payload_size; DWORD Teb; }; API hashing algorithm :\n1 2 3 4 5 6 7 8 9 10 def get_hash(str): hash = 0x1EC8 for c in str: if ord(c) \u0026gt; 0x60: hash = ord(c) + (33 * hash) - 32 else: hash = ord(c) + (33 * hash) return hash \u0026amp; 0xFFFFFFFF Process Hollowing Pikabot Loader stores the core module in the .data section in chunks encrypted with RC4 and base64-encoded.\nPikabot use the combination of RtlCreateProcessParametersEx, NtCreateUserProcess, RtlDestroyProcessParameters to create ctfmon.exe process.\nAfter Decompressing the payload with RtlDecompressBuffer, it use Process Hollowing technique to inject the core module into the created process (ctfmon.exe).\nCore Module The core module infect the victim machine based on the language identifier using GetUserDefaultLangID. If the LangID is set to Russian (0x419) or Ukranian (0x422), the core module will immediately stop its execution.\nThe Core Module stores its configuration in the data section, which contains IP addresses, URIs, Pikabot version, and additional HTTP headers.\nThe next phase involves collecting victim machine information :\nRetrieves the name of the user associated with the PIKABOT thread. Retrieves the computer name. Gets processor information. Grabs display device information using EnumDisplayDevicesW. Retrieves domain controller information using DsGetDcNameW. Collects current usage around physical and virtual memory using GlobalMemoryStatusEx. Gets the window dimensions using GetWindowRect used to identify sandbox environments. Retrieves Windows OS product information using RtlGetVersion. Uses CreateToolhelp32Snapshot to retrieve process information. The collected victim machine information will be encrypted with random key and roatate it with a random number of bytes. the last 4 byte of the config is the number of roatations.\nPikabot registers the bot by sending previously collected information to a random URI.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 api/auth.revoke api/apps.permissions.info api/admin.conversations.restrictAccess.removeGroup api/admin.emoji.add api/admin.apps.restrict api/auth.test api/admin.conversations.archive api/admin.conversations.restrictAccess.addGroup api/apps.event.authorizations.list api/admin.emoji.addAlias api/admin.conversations.getConversationPrefs api/admin.users.setOwner api/admin.inviteRequests.approved.list api/admin.conversations.create api/admin.conversations.inviteBapi/admin.usergroups.listChannels api/apps.permissions.users.request api/admin.users.remove api/admin.conversations.ekm.listOriginalConnectedChannelInfo api/admin.inviteRequests.denied.list api/admin.apps.approve api/admin.users.list api/admin.emoji.list api/admin.conversations.rename Pikabot enters beaconing state, waiting for commands from the C2 server.\nIOCs 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 --------------------------------------------------------------------- 94.72.104[.]77:13724 154.12.236[.]248:13786 84.46.240[.]42:2083 94.72.104[.]80:5000 198.38.94[.]213:2224 45.77.63[.]237:22 70.34.199[.]64:9785 70.34.223[.]164:9785 70.34.223[.]164:5000 158.247.240[.]58:22 154.53.55[.]165:13783 209.126.86[.]48:1194 --------------------------------------------------------------------- yourunitedlaws[.]com --------------------------------------------------------------------- api/auth.revoke api/apps.permissions.info api/admin.conversations.restrictAccess.removeGroup api/admin.emoji.add api/admin.apps.restrict api/auth.test api/admin.conversations.archive api/admin.conversations.restrictAccess.addGroup api/apps.event.authorizations.list api/admin.emoji.addAlias api/admin.conversations.getConversationPrefs api/admin.users.setOwner api/admin.inviteRequests.approved.list api/admin.conversations.create api/admin.conversations.inviteBapi/admin.usergroups.listChannels api/apps.permissions.users.request api/admin.users.remove api/admin.conversations.ekm.listOriginalConnectedChannelInfo api/admin.inviteRequests.denied.list api/admin.apps.approve api/admin.users.list api/admin.emoji.list api/admin.conversations.rename --------------------------------------------------------------------- 905a3a144f94a38ac6059759879caec19cff446b98c24bb2035b3293330e03b2 fb8e3ef19f0a3ad298b8d315a716aae1151332c1f097296962a3a04017f940ae 6c5f88c7d2bc6f75264eecc733e74f9b5aa88a54881978dabbc68a8aa5928fc8 cfcf2c1f9f72e719d7a50f0a07c081b8353ae8c04dff2ea9284230539a59d7ac --------------------------------------------------------------------- {A7C67034-A769-4D94-B727-B30C6C7F66FC} --------------------------------------------------------------------- YARA 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 rule Pikabot_loader{ meta: author = \u0026#34;Cr4CK3d\u0026#34; description = \u0026#34;Detect Pikabot Loader\u0026#34; created = \u0026#34;2024-04-19\u0026#34; strings: $NtCreateUserProcess_syscall = { 68 2C B1 AC 82 E8 5F FF FF FF } $rc4_decrypt_core = {F7 FF 8A 84 15 ?? ?? ?? ?? 89 D1 8A 94 1D ?? ?? ?? ?? 88 94 0D ?? ?? ?? ?? 8B 55 08 88 84 1D ?? ?? ?? ?? 02 84 0D ?? ?? ?? ?? 0F B6 C0 8A 84 05 ?? ?? ?? ?? 32 04 32} condition: 1 of them } rule Pikabot_core{ meta: author = \u0026#34;Cr4CK3d\u0026#34; description = \u0026#34;Detect Pikabot core\u0026#34; created = \u0026#34;2024-04-19\u0026#34; strings: $c2_commands = { 6F 24 [6] CB 0A [6] 6C 03 [6] 92 07 } $debug_check = { E8 ?? ?? ?? ?? 3D 00 25 00 00 75 } condition: 1 of them } Download https://www.malware-traffic-analysis.net/2024/03/06/index.html\n","date":"2024-04-13T00:00:00Z","image":"http://localhost:1313/p/hello-world/cover_hu96127eeb90c035c3fbe3b6abf967bc7d_353782_120x120_fill_q75_box_smart1.jpg","permalink":"http://localhost:1313/p/hello-world/","title":"PikaBot: Unmasking Its Deep Secrets"}]