<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>cr4ck3d</title>
        <link>http://localhost:1313/</link>
        <description>cr4ck3d</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>cr4ck3d@gmail.com (cr4ck3d)</managingEditor>
            <webMaster>cr4ck3d@gmail.com (cr4ck3d)</webMaster><lastBuildDate>Sat, 13 Apr 2024 16:22:14 &#43;0000</lastBuildDate>
            <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>Pikabot Analysis</title>
    <link>http://localhost:1313/2024/04/pikabot/</link>
    <pubDate>Sat, 13 Apr 2024 16:22:14 &#43;0000</pubDate>
    <author>cr4ck3d</author>
    <guid>http://localhost:1313/2024/04/pikabot/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/pikabot.jpeg" referrerpolicy="no-referrer">
            </div>Executive Summary Pikabot used indirect syscalls to evade detection. Pikabot used RC4 for strings encryption/decryption. Pikabot used varouis anti-analysis techniques to slow down the analysis. Infection Chain The infection chain start with running a copy of the legitimate file for Windows Write (write.exe) that will side-loads malicious DLL named edputil.dll, then it will download the packed Pikabot DLL. after unpacking the Pikabot Loader will decrypt and inject the core module into the created process &ldquo;ctfmon.]]></description>
</item>
</channel>
</rss>
